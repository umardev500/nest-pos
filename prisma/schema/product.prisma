model Product {
    id           Int      @id @default(autoincrement())
    name         String
    description  String?
    image_url    String?
    barcode      String?
    base_unit_id Int
    category_id  Int?
    merchant_id  Int
    discount_id  Int?
    created_at   DateTime @default(now())
    updated_at   DateTime @updatedAt

    // Relationships
    base_unit        Unit             @relation(fields: [base_unit_id], references: [id])
    category         Category?        @relation(fields: [category_id], references: [id], onDelete: SetNull)
    merchant         Merchant         @relation(fields: [merchant_id], references: [id], onDelete: Cascade)
    discount         Discount?        @relation(fields: [discount_id], references: [id], onDelete: SetNull)
    product_units    ProductUnit[]
    product_variants ProductVariant[]
    order_item       OrderItem[]
}

model Unit {
    id          Int    @id @default(autoincrement())
    name        String
    merchant_id Int

    // Relationships
    merchant        Merchant         @relation(fields: [merchant_id], references: [id], onDelete: Cascade)
    Product         Product[]
    product_unit    ProductUnit[]
    product_variant ProductVariant[]
}

model ProductUnit {
    id                Int     @id @default(autoincrement())
    product_id        Int
    unit_id           Int
    stock             Int
    price             Float
    conversion_factor Float
    sku               String  @unique
    barcode           String?

    // Relationships
    product Product @relation(fields: [product_id], references: [id], onDelete: Cascade)
    unit    Unit    @relation(fields: [unit_id], references: [id], onDelete: Cascade)

    @@unique([product_id, unit_id])
}

// --- Variant System ---

model VariantType {
    id   Int    @id @default(autoincrement())
    name String

    // Relationships
    variant_value VariantValue[]
}

model VariantValue {
    id              Int    @id @default(autoincrement())
    variant_type_id Int
    value           String

    // Relationships
    variant_type           VariantType           @relation(fields: [variant_type_id], references: [id], onDelete: Cascade)
    product_variant_values ProductVariantValue[]
}

// Connects Product with VariantValue (via ProductVariant) and holds specific pricing/stock
model ProductVariant {
    id         Int     @id @default(autoincrement())
    product_id Int
    unit_id    Int
    stock      Int
    price      Float
    sku        String  @unique
    barcode    String?

    // Relationships
    product                Product               @relation(fields: [product_id], references: [id], onDelete: Cascade)
    unit                   Unit?                 @relation(fields: [unit_id], references: [id], onDelete: Cascade)
    product_variant_values ProductVariantValue[]
}

model ProductVariantValue {
    id                 Int @id @default(autoincrement())
    product_variant_id Int
    variant_value_id   Int

    // Relationships
    product_variant ProductVariant @relation(fields: [product_variant_id], references: [id], onDelete: Cascade)
    variant_value   VariantValue   @relation(fields: [variant_value_id], references: [id], onDelete: Cascade)

    @@unique([product_variant_id, variant_value_id])
}
